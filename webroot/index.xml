<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Julie Fischer</title>
    <link>https://julie.fischey-rando.com/</link>
    <description>Recent content on Julie Fischer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Aug 2017 10:43:59 -0400</lastBuildDate>
    
	<atom:link href="https://julie.fischey-rando.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Text Parsing With Go</title>
      <link>https://julie.fischey-rando.com/post/text-parsing-with-go/</link>
      <pubDate>Mon, 28 Aug 2017 10:43:59 -0400</pubDate>
      
      <guid>https://julie.fischey-rando.com/post/text-parsing-with-go/</guid>
      <description>It&#39;s been quite a while since I&#39;ve posted. A few weeks ago I switched to a new type of Go project after feeling powerlessly furious at most of the goings on in the Trump adminstration. I was so enraged by the President’s response to fascist ideology that I had to do something to defuse my own rage. Since I worry about Trump&#39;s tweet-based approach to policy and his 140-character limit on morality, I decided I&#39;d like to chop Hannah Arendt&#39;s text &#34;</description>
    </item>
    
    <item>
      <title>Fun With Websockets</title>
      <link>https://julie.fischey-rando.com/post/fun-with-websockets/</link>
      <pubDate>Wed, 09 Aug 2017 17:30:08 -0400</pubDate>
      
      <guid>https://julie.fischey-rando.com/post/fun-with-websockets/</guid>
      <description>Another Pushie update! I&amp;rsquo;m now in Week 4 of learning Go, and attempting to implement a Real-time Push Notification Server. Previously, I gave a quick overview of the project and discussed writing tests for the project with Go&amp;rsquo;s testing tools.
Today, I&amp;rsquo;m excited to report I&amp;rsquo;ve entered the wild world of websockets - real ones, not Websocket objects which I shamelessly faked in order to focus on the logic of my handler functions.</description>
    </item>
    
    <item>
      <title>Testing with httptest</title>
      <link>https://julie.fischey-rando.com/post/testing/</link>
      <pubDate>Sat, 05 Aug 2017 12:31:12 -0400</pubDate>
      
      <guid>https://julie.fischey-rando.com/post/testing/</guid>
      <description>I&amp;rsquo;m forging ahead with Pushie, my real-time push notification server. The first step was setting up Gorilla Mux to handle routing. Each route then has an associated handler function, which, when called, executes one of Pushie&amp;rsquo;s main functions.
I decided to start by working out PublishHandler, the function called when a web app sends a request to pushie at the URL path &amp;ldquo;/publish.&amp;rdquo; Guess what it does? It publishes a message from the web app to any clients listening on that channel.</description>
    </item>
    
    <item>
      <title>Merge #115: My First Pull Request!</title>
      <link>https://julie.fischey-rando.com/post/my-first-pull-request/</link>
      <pubDate>Wed, 02 Aug 2017 14:49:53 -0400</pubDate>
      
      <guid>https://julie.fischey-rando.com/post/my-first-pull-request/</guid>
      <description>This is a big deal for me: I had my first pull request merged! Confession: it was a Docs fix, but hey, I was still celebrating.
It&amp;rsquo;s a tiny 6 line diff, adding a step to Hugo&amp;rsquo;s Contributor Guide. (Hugo is an awesome blog generator written in Go, and it&amp;rsquo;s also powering this blog. I love working with it, so I started hunting around their repos for an opportunity to make a contribution.</description>
    </item>
    
    <item>
      <title>Tom Waits Shell Script</title>
      <link>https://julie.fischey-rando.com/post/tom-waits-shell-script/</link>
      <pubDate>Tue, 25 Jul 2017 14:26:12 -0400</pubDate>
      
      <guid>https://julie.fischey-rando.com/post/tom-waits-shell-script/</guid>
      <description>Today I got sad because I thought I understood something about $GOPATH and $PATH variables, so I spent a bunch of time trying to articulate it in writing, and then discovered in the process that I didn&amp;rsquo;t really understand it correctly. So that&amp;rsquo;s a whole morning spent on something that didn&amp;rsquo;t really pan out.
I wanted to accomplish something. Preferably in 30 seconds or less.
So I wrote a tiny shell script that opens YouTube with a pre-filled search query for Tom Waits:</description>
    </item>
    
    <item>
      <title>Creating a Push Notification Server: Overview</title>
      <link>https://julie.fischey-rando.com/post/pushie-server-01/</link>
      <pubDate>Thu, 20 Jul 2017 16:49:10 -0400</pubDate>
      
      <guid>https://julie.fischey-rando.com/post/pushie-server-01/</guid>
      <description>My first portfolio project is a real-time push notification server, written in Golang. It&amp;rsquo;s modeled on the Node.js project by Beejeebus. And as luck would have it, I&amp;rsquo;m married to Beejeebus! (Yay!) So while this is probably more of an advanced project, I have a live-in mentor and occassional responsive rubber duck kindly supporting me on this one.
Basic Concept
To get started, I had to understand what exactly Pushie does and how it works.</description>
    </item>
    
    <item>
      <title>Wait But Why?</title>
      <link>https://julie.fischey-rando.com/post/wait-but-why/</link>
      <pubDate>Mon, 17 Jul 2017 14:14:44 -0400</pubDate>
      
      <guid>https://julie.fischey-rando.com/post/wait-but-why/</guid>
      <description>My workplace generously allowed me to take some personal-leave time after a rough &amp;amp; tumble start to 2017. I&amp;rsquo;ll use the time to go Fully Concentrated on learning to program, something I&amp;rsquo;ve been exploring very-part-time for about a year.
That seems fine. Except, oh wait, why?
No one who looked into my humanities-riddled education would likely suggest I take up computer programming as a natural fit. But spending the last few years in tech, I’ve come to a conclusion about myself:</description>
    </item>
    
  </channel>
</rss>